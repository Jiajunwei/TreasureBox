<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!--&lt;!&ndash;定义一个jdbc数据源，创建一个驱动管理数据源的bean &ndash;&gt;-->
	<!--<bean id="jdbcDataSource"-->
	<!--class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
	<!--<property name="driverClassName" value="com.mysql.jdbc.Driver" />-->
	<!--<property name="url" value="jdbc:mysql://localhost:3306/db_test" />-->
	<!--<property name="username" value="root" />-->
	<!--<property name="password" value="root" />-->
	<!--</bean>-->

	<!--属性占位文件引入，可以通过${属性名}获得属性文件中的内容-->
	<context:property-placeholder location="classpath:db.properties"/>

	<!--定义一个jdbc数据源，创建一个驱动管理数据源的bean -->
	<bean id="jdbcDataSource"
		  class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.username}" />
	</bean>


	<!--&lt;!&ndash;创建一个sql会话工厂bean，指定数据源&ndash;&gt;-->
	<!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
		<!--<property name="dataSource" ref="jdbcDataSource" />&lt;!&ndash; 指定数据源 &ndash;&gt;-->
		<!--<property name="configLocation" value="classpath:MyBatisCfg.xml"></property> &lt;!&ndash; 指定配置文件 &ndash;&gt;-->
	<!--</bean>-->

	<!--创建一个sql会话工厂bean，指定数据源，MyBatisCfg.xml配置文件中的配置可以移到这里-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 1指定数据源 -->
		<property name="dataSource" ref="jdbcDataSource" />
		<!-- 2类型别名包，默认引入come.home.spring02_01.entities下的所有类 -->
		<property name="typeAliasesPackage" value="come.home.spring02_01.com.home.entities"></property>
		<!-- 3指定sql映射xml文件的路径 -->
		<property name="mapperLocations" value="come/home/spring02_01/mapping/*Mapper.xml"></property>
		<property name="typeAliases" value="come.home.spring02_01.com.home.entities"></property>
	</bean>

	<!--&lt;!&ndash; 创建一个booTypeDAO&ndash;&gt;-->
	<!--<bean id="bookTypeDao" class="org.mybatis.spring.mapper.MapperFactoryBean">-->
	    <!--&lt;!&ndash;指定映射文件 &ndash;&gt;-->
		<!--<property name="mapperInterface" value="come.home.spring02_01.mapping.BookTypeDAO"></property>-->
		<!--&lt;!&ndash; 指定sql会话工厂&ndash;&gt;-->
		<!--<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>-->
	<!--</bean>-->

	<!-- 多个接口 -->
	<!--自动扫描映射接口-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 指定sql会话工厂，在上面配置过的 -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
		<!-- 指定基础包，即自动扫描com.zhangguo.Spring61.mapping这个包以及它的子包下的所有映射接口类 -->
		<property name="basePackage" value="come.home.spring02_01.mapping.mapping"></property>
	</bean>

</beans>
